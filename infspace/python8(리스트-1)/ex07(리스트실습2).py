# 리스트 일치 검사를 하는 실습
# 리스트가 일치하는 연산을 위해서 반드시 2개의 리스트가 반드시 동일한 자료형이어야 한다.(중요)
li1 = [10,20,30]
li2 = [10,20,30]
print(li1 == li2)

# == 연산자는 2개의 리스트가 길이가 서로 다르면 무조건 False 이다.
li1 = [10,20,30]
li2 = [10,20]
print(li1 == li2)

li3 = [4,5,2]
li4 = [4,5,0]
print(li3 > li4)

# 아래 리스트는 >, < 를 비교할 때 아스키 코드를 가지고 비교한다.
li5 = ["a","b","c"]
li6 = ["a","b","d"]
print(li5 < li6)
# 아스키 코드를 찍는 함수 ord()
print(ord("c"))  # c의 아스키 코드값 : 99
print(ord("d"))  # d의 아스키 코드값 : 100

# 아스키 코드를 문자로 변환하는 함수 chr()
print(chr(99))
print(chr(100))

print("----------------------------------------------------------")

# 리스트 정렬하기(2가지 방법)
# 첫 번째 방법 : 리스트 객체의 sort() 메소드를 이용하는 방법
# 원본 리스트의 값이 변경이 된다.
li = [80,90,100,-70,-50]
a = li.sort()
print(li)
print(a)    # 리턴값이 없다. None
print("----------------------------------------------------------")
# 두 번째 방법 : 내장함수로 존재하는 sorted() 메서드를 이용하는 방법
# 원본 리스트는 그대로 유지를 하고 정렬된 리스트를 반환을 해준다.
li = [80,90,100,-70,-50]
c_li = sorted(li)
print(li)
print(c_li)
print("----------------------------------------------------------")

# 리스트 객체의 reverse()는 내림차순이 아니라 리스트 요소를 뒤집는 메서드이다.
li = [80,90,100,-70,-50]
li.reverse()
print(li)

# reverse 매개변수의 값을 True 로 설정하면 내림차순 정렬이 된다
li = [80,90,100,-70,-50]
li.sort(reverse=True)   # Ctrl + space
print(li)

# sorted() 메서드의 내림차순 정렬 방법
print("----------------------------------------------------------")
li = [80,90,100,-70,-50]
c_li = sorted(li,reverse=True)
print(li)
print(c_li)

# 문자열 정렬하기(유니코드 기준으로 정렬)
li = ["하와이","폭포","가나","한국"]
li1 = sorted(li, key=str.lower)
print(li)
print(li1)

# 긴 문자열을 분리하는 방법(split()), 리스트에 담아서는 안됨
# 문자열을 분리해서 리스트 타입으로 반환.
statement = "나는 한국에서 살고 있는 프로그래밍 학생입니다. 만나서 반갑습니다."
li = statement.split()
li2 = statement.split(".")
print(li)
print(li2)